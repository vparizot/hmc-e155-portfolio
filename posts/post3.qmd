---
title: "The Embedded Systems Surrounding us"
author: "Victoria Parizot"
date: "9/11/24"
categories:
  - reflection
draft: false
---

Throughout this course, I have been working with an MCU and FPGA extensively. As I do so, I admire the reprogrammable aspects, allowing me to test and implement a variety of systems. On the other end of this "reusability spectrum" spectrum lies the embedded system, which a specialized computer system for a specific task. In my blog this week, I want to look more at the embedded systems that surround me. 

For starters, I wear an apple watch -- a combination of sensors, software, and hardware on my wrist. This specialized system is able to monitor my daily steps, heartbeat, movements, as well as connect with my phone to share text messages.  The apple watch uses an accelerometer, a gyroscope, a barometer, a Force Touch Sensor, and a Heart Rate Sensor. The accelerometer and gyroscope are critical for detecting orientation and movements -- and seem quite intuitive to include. The barometer seems less intuitive -- however the pressure readings can indicate elevation changes. The Force Touch Sensor is useful for inputing user's intentions as they touch the screen. Finally, the Heart Rate Sensor uses photoplethysmography (light) to measure heart rate. I am always amazed by the accuracy of the apple watch. I often use my watch to record my swim workouts, and sometimes compare the stroke breakdown and yardage to reality, and am impresssed by how similair it is.  
<!-- https://www.eeweb.com/the-sensors-behind-the-apple-watch/ -->

Another embedded system is my digital camera, which is able to perform image processing, autofocus, exposure, and picture stabilization. It features a variety of settings, spanning from completely manual to specialized automatic modes -- like portrait and landscape mode.

Air conditioning is also another embedded system. We recently just had a heat wave, with temperatures reaching 112 degrees. During which, the air conditioning broke. The HVAC system used in my dorm required replacements for highly specialized parts, which were difficult to source. This points out a down side of embedded systems -- due to their task-specific nature, as embedded systems phase out, the parts and documentation can be hard to find.

